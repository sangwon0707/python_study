import numpy as np

C = np.array([1,2,3])
print("C.shape ==", C.shape)

C = C.reshape(1,3)
print("C.shape ==", C.shape)
print(C)

# -------------------------------------

D = np.array([[1,2,3,],[4,5,6]])
print("D.shape ==", D.shape)

D = D.reshape(3, 2)
print("D.shape ==", D.shape)


A = np.array([[  1,   2,   3,   4],
              [ 10,  20,  30,  40],
              [100, 200, 300, 400]])

A = A.reshape(-1,2,3)
print(A.shape) 
print(A)
'''
✅ reshape 정리
1. 데이터는 그대로, 모양만 바뀐다
reshape은 원소 값이나 순서를 바꾸지 않고, 배열의 shape(차원 구조)만 바꾼다.

2. 차원 수는 자유롭게 지정 가능
(행, 열) 같은 2차원뿐 아니라 (a, b, c) 형태의 3차원 이상도 가능하다.
단, 모든 차원의 곱 = 전체 원소 개수와 같아야 한다.
-1은 자동 계산

3. 한 자리에 -1을 넣으면 나머지 차원 크기에 맞춰 자동으로 계산된다.
예: (2, -1) → 원소 개수 6개라면 (2,3)이 된다.

4. 앞 차원 = 큰 단위, 뒤 차원 = 작은 단위
맨 앞 차원은 가장 큰 덩어리(느리게 변함).
맨 뒤 차원은 가장 작은 단위(빠르게 변함).
예: (2,2,3) → 2개 블록 → 각 블록에 2행 → 각 행에 3개 원소.
'''